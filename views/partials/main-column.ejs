<!-- Left Column -->
<div class="main-column">
    <!-- Do You Want To Know More -->
    <div id="problem-container" class="focus-section">
        <div id="problem-title" class="section-title-gray">Select a Problem</div>
        <p id="problem-description">Problem description will appear here.</p>

    </div>
    <div class="focus-section">
        <div class="section-title-gray">Solution</div>
        <div class="right-content">
            <button class="search-btn" onclick="resetCode()">Reset</button>
            <button class="search-btn" onclick="runCode()">Run</button>
            <button class="search-btn" onclick="submitCode()">Submit</button>
        </div>
        <pre id="output" class="output-sol"></pre>
        <div id="editor" class="editor-sol"></div>

        <script>
            async function runCode() {
                const code = editor.getValue(); // Assuming `editor` is the Monaco editor instance
    
                try {
                    const response = await fetch('/api/execute', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ code })
                    });
                    const result = await response.json();
                    document.getElementById('output').innerText = result.success ? result.output : 'Error: ' + result.error;
                } catch (err) {
                    document.getElementById('output').innerText = 'Error: ' + err.message;
                }
            }
            
            require.config({ paths: { 'vs': 'https://unpkg.com/monaco-editor@0.30.1/min/vs' } });
            require(['vs/editor/editor.main'], function () {
                monaco.languages.register({ id: 'solidity' });
    
                monaco.languages.setMonarchTokensProvider('solidity', {
                    keywords: ['pragma', 'solidity', 'contract', 'function', 'returns', 'public', 'view', 'string', 'memory'],
                    tokenizer: {
                        root: [
                            [/pragma solidity \^\d+\.\d+\.\d+/, "keyword"],
                            [/[{}()\[\]]/, "@brackets"],
                            [/[a-z_$][\w$]*/, {
                                cases: {
                                    '@keywords': 'keyword',
                                    '@default': 'identifier'
                                }
                            }],
                            [/[A-Z][\w\$]*/, 'type.identifier'],
                            [/\d+/, 'number']
                        ]
                    }
                });
    
                editor = monaco.editor.create(document.getElementById('editor'), {
                    value: `pragma solidity ^0.8.0;
    
    contract HelloWorld {
        string public greeting = "Hello, Solidity!";
    
        function greet() public view returns (string memory) {
            return greeting;
        }
    }`,
                    language: 'solidity',
                    theme: 'vs-dark'
                });
            });
        </script>
    </div>
</div>
