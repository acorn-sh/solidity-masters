<!-- Left Column-->
<div class="left-column">
    <div class="focus-section">
        <div class="section-title">Problems</div>
        <div class="section-title-text">
            <ul>
                <li>
                    <div class="column-number">#</div>
                    <div class="column-text">Title</div>
                    <div class="column-score">Difficulty</div>
                </li>
            </ul>
            <ul id="problems-list">

            </ul>
        </div>

    </div>
</div>

<script>
    // Fetch and display problems
    async function loadProblems() {
        try {
            const response = await fetch('/api/problems');
            const problems = await response.json();
            const problemsList = document.getElementById('problems-list');

            // Clear any existing list items
            problemsList.innerHTML = '';

            problems.forEach((problem, index) => {
                const listItem = document.createElement('li');
                listItem.innerHTML = `
                    <div class="column-number">${index + 1}.</div>
                    <div class="column-text"><a href="#" onclick="loadProblem(${problem.id})">${problem.title}</a></div>
                    <div class="column-score">10</div>
                `;
                problemsList.appendChild(listItem);
            });
        } catch (error) {
            console.error('Error loading problems:', error);
        }
    }

    // Call this function to display the problem title, description, and initial code in the main column
    async function loadProblem(id) {
        try {
            const response = await fetch(`/api/problems/${id}`);
            const problem = await response.json();
            document.getElementById('problem-title').innerText = problem.title;
            document.getElementById('problem-description').innerText = problem.description;
            editor.setValue(problem.initial_code); // Assuming editor is the Monaco editor instance
        } catch (error) {
            console.error('Error loading problem:', error);
        }
    }

    // Load problems when the page loads
    window.onload = loadProblems;
</script>